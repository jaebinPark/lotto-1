name: Deploy to GitHub Pages

on:
push:
branches: [ "main" ]
workflow_dispatch:

permissions:
contents: read
pages: write
id-token: write

concurrency:
group: "pages"
cancel-in-progress: true

jobs:
build:
runs-on: ubuntu-latest
steps:
- name: Checkout
uses: actions/checkout@v4

# package.json이 있을 때만 Node 세팅/설치 (없으면 자동 생략)
- name: Setup Node (optional)
uses: actions/setup-node@v4
with:
node-version: "20"
if: ${{ hashFiles('package.json') != '' }}

- name: Install deps (optional)
run: npm ci
if: ${{ hashFiles('package.json') != '' }}

# 전체 회차 수집/ANTI 생성 스크립트가 있을 때만 실행 (없으면 생략)
- name: Build draws (optional)
run: node scripts/build-draws.mjs
if: ${{ hashFiles('scripts/build-draws.mjs') != '' }}

- name: Build anti (optional)
run: node scripts/build-anti.mjs
if: ${{ hashFiles('scripts/build-anti.mjs') != '' }}

# 정적 파일을 dist로 모아 업로드
- name: Prepare dist
shell: bash
run: |
set -e
mkdir -p dist
for p in index.html 404.html styles.css manifest.webmanifest sw.js; do
[ -f "$p" ] && cp "$p" dist/ || true
done
[ -d icons ] && cp -r icons dist/
[ -d data ] && cp -r data dist/
[ -d js ] && cp -r js dist/
touch dist/.nojekyll

- name: Upload artifact
uses: actions/upload-pages-artifact@v3
with:
path: dist

deploy:
needs: build
runs-on: ubuntu-latest
permissions:
pages: write
id-token: write
environment:
name: github-pages
url: ${{ steps.deployment.outputs.page_url }}
steps:
- name: Deploy to GitHub Pages
id: deployment
uses: actions/deploy-pages@v4
